#!/usr/bin/env python3
"""
Script simple pour v√©rifier la base de donn√©es FlexiShop
"""

import requests
import json

API_URL = "https://flexishop.onrender.com"

def check_database():
    print("üîç V√©rification de la base de donn√©es FlexiShop")
    print("=" * 50)
    
    try:
        # 1. V√©rifier la sant√© de l'API
        print("\n1. V√©rification de l'API...")
        response = requests.get(f"{API_URL}/health")
        if response.status_code == 200:
            health_data = response.json()
            print(f"   ‚úÖ API en ligne: {health_data}")
        else:
            print(f"   ‚ùå API hors ligne: {response.status_code}")
            return
        
        # 2. V√©rifier l'initialisation de la base
        print("\n2. V√©rification de la base de donn√©es...")
        response = requests.get(f"{API_URL}/init-db")
        if response.status_code == 200:
            db_data = response.json()
            print(f"   ‚úÖ Base de donn√©es: {db_data}")
        else:
            print(f"   ‚ùå Probl√®me base de donn√©es: {response.status_code}")
        
        # 3. V√©rifier les produits
        print("\n3. V√©rification des produits...")
        response = requests.get(f"{API_URL}/api/products/")
        if response.status_code == 200:
            products = response.json()
            print(f"   ‚úÖ Produits trouv√©s: {len(products)}")
            for product in products[:3]:  # Afficher les 3 premiers
                print(f"      - {product.get('name', 'N/A')}: ‚Ç¨{product.get('price', 'N/A')}")
        else:
            print(f"   ‚ùå Aucun produit: {response.status_code}")
        
        # 4. Tester la cr√©ation d'un utilisateur
        print("\n4. Test de cr√©ation d'utilisateur...")
        test_user = {
            "email": "test@example.com",
            "password": "test123"
        }
        response = requests.post(f"{API_URL}/api/users/register", json=test_user)
        if response.status_code == 200:
            user_data = response.json()
            print(f"   ‚úÖ Utilisateur cr√©√©: {user_data.get('email', 'N/A')}")
        elif response.status_code == 400:
            print("   ‚ÑπÔ∏è  Utilisateur existe d√©j√† (normal)")
        else:
            print(f"   ‚ùå Erreur cr√©ation utilisateur: {response.status_code}")
        
        # 5. Tester la cr√©ation d'un admin
        print("\n5. Test de cr√©ation d'admin...")
        test_admin = {
            "email": "admin@flexishop.com",
            "password": "admin123"
        }
        response = requests.post(f"{API_URL}/api/auth/create-admin", json=test_admin)
        if response.status_code == 201:
            admin_data = response.json()
            print(f"   ‚úÖ Admin cr√©√©: {admin_data.get('email', 'N/A')}")
        elif response.status_code == 400:
            print("   ‚ÑπÔ∏è  Admin existe d√©j√† (normal)")
        else:
            print(f"   ‚ùå Erreur cr√©ation admin: {response.status_code}")
        
        print("\n‚úÖ V√©rification termin√©e!")
        
    except Exception as e:
        print(f"‚ùå Erreur: {e}")

if __name__ == "__main__":
    check_database()
